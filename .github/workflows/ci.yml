name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      VERBOSE: 1
      GOFLAGS: -mod=readonly
      GOPROXY: https://proxy.golang.org

    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Lint
        run: make lint

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ['1.12', '1.13', '1.14']
    env:
      VERBOSE: 1
      GOFLAGS: -mod=readonly
      GOPROXY: https://proxy.golang.org

    services:
      vault:
        image: vault:1.4.2
        ports:
          - 8200
        env:
          SKIP_SETCAP: true
          VAULT_DEV_ROOT_TOKEN_ID: root

    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Test
        run: make test
        env:
          VAULT_ADDR: http://0.0.0.0:${{ job.services.vault.ports['8200'] }}
          VAULT_TOKEN: root

      - name: Upload coverage
        uses: codecov/codecov-action@v1
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: build/coverage.txt
